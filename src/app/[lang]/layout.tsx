import { dir } from 'i18next';
import type { Metadata } from 'next';
import localFont from 'next/font/local';

import { WrappedToast } from '@/components/core/Toast';
import { AuthProvider } from '@/components/features/login/AuthProvider';
import { AuthClientSetup } from '@/components/layouts/AuthClientSetup';
import { Header } from '@/components/layouts/Header';
import { ProgressBar } from '@/components/layouts/ProgressBar';
import { getServerSession } from '@/lib/auth';
import { ReduxProvider } from '@/stores/ReduxProvider';

import './globals.css';
import { languages } from '../i18n/settings';

const inter = localFont({
  src: [
    {
      path: '../../assets/fonts/SVN-Gilroy Light.woff',
      weight: '300',
      style: 'normal'
    },
    {
      path: '../../assets/fonts/SVN-Gilroy Regular.woff',
      weight: '400',
      style: 'normal'
    },
    {
      path: '../../assets/fonts/SVN-Gilroy Medium.woff',
      weight: '500',
      style: 'normal'
    },
    {
      path: '../../assets/fonts/SVN-Gilroy SemiBold.woff',
      weight: '600',
      style: 'normal'
    },
    {
      path: '../../assets/fonts/SVN-Gilroy Bold.woff',
      weight: '700',
      style: 'normal'
    },
    {
      path: '../../assets/fonts/SVN-Gilroy Heavy.woff',
      weight: '800',
      style: 'normal'
    }
  ]
});

export async function generateStaticParams() {
  return languages.map(lang => ({ lang }));
}

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app'
};

export default async function RootLayout({
  children,
  params: { lang }
}: {
  children: React.ReactNode;
  params: { lang: string };
}) {
  const session = await getServerSession();

  return (
    <html suppressHydrationWarning lang={lang} dir={dir(lang)}>
      <body suppressHydrationWarning className={inter.className}>
        <ProgressBar />
        <WrappedToast />
        <AuthProvider>
          <AuthClientSetup session={session} />
          <ReduxProvider>
            <Header />
            {children}
          </ReduxProvider>
        </AuthProvider>
      </body>
    </html>
  );
}
